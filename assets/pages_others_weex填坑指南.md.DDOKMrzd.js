import{_ as n}from"./chunks/theme.Cda8gEDC.js";import{_ as l,c as e,G as o,am as p,o as t}from"./chunks/framework.m8Ul0eMb.js";const E=JSON.parse('{"title":"weex填坑指南","description":"weex填坑指南","frontmatter":{"layout":"doc","outline":"deep","title":"weex填坑指南","description":"weex填坑指南"},"headers":[],"relativePath":"pages/others/weex填坑指南.md","filePath":"pages/others/weex填坑指南.md"}'),c={name:"pages/others/weex填坑指南.md"};function F(r,s,i,y,d,u){const a=n;return t(),e("div",null,[o(a,{words:["weex填坑指南"]}),s[0]||(s[0]=p(`<h2 id="记录项目从-vue-2-0-拓展到-weex" tabindex="-1">记录项目从 Vue 2.0 拓展到 Weex <a class="header-anchor" href="#记录项目从-vue-2-0-拓展到-weex" aria-label="Permalink to &quot;记录项目从 Vue 2.0 拓展到 Weex&quot;">​</a></h2><ul><li><p>不支持 <code>p</code> 标签，<code>p</code> 居然不能设置 <code>font-size</code>，文字显示一律改用 <code>text</code> 标签：<code>&lt;text&gt;&lt;/text&gt;</code></p></li><li><p><code>padding</code>、<code>border</code>、<code>margin</code> 等属性不支持简写，请使用 <code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code>、<code>padding-left</code></p></li><li><p><code>:class</code> 不能使用对象语法，应该使用数组语法。数组写法：<code>:class=&quot;[type === &#39;index&#39; ? &#39;active&#39; : &#39;&#39;]&quot;</code> ✔️；对象写法：<code>:class=&quot;{active: type === &#39;index&#39;}&quot;</code> ❌。且数组写法一次只能判断添加一个类，<code>:class=&quot;[type === &#39;index&#39; ? &#39;active disabled&#39; : &#39;&#39;]&quot;</code> ❌</p></li><li><p>图片一定需要写宽高，且不能使用 <code>img</code> 简写，只能用 <code>image</code> 标签</p></li><li><p>务必使用 Weex 提供的所支持的标签，例如 <code>div</code>、<code>text</code>（HTML5 标签语义化一夜回到解放前，毕竟不用 SEO）。在 Weex 提供的内建组件中，例如 <code>scroller</code> 之类的，使用 Weex 不支持的标签在 native 端可能会导致 DOM 元素直接消失</p></li><li><p><a href="https://github.com/Somnusochi/incubator-weex/tree/master/examples/vue" target="_blank" rel="noreferrer">Vue 语法的 Weex 组件</a></p></li><li><p><a href="https://github.com/dreamochi/DayDayUp/issues/78" target="_blank" rel="noreferrer">Stream 请求封装</a></p></li><li><p><code>DOM</code> 元素只支持单个类设置样式</p></li></ul><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">div</span><span style="color:#A6E22E;"> class</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;warpper&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">  &lt;</span><span style="color:#F44747;">text</span><span style="color:#A6E22E;"> class</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;warpper_context&quot;</span><span style="color:#F8F8F2;">&gt;text&lt;/</span><span style="color:#F44747;">text</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">div</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre></div></div><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#A6E22E;">.warpper</span><span style="color:#A6E22E;"> .warpper_context</span><span style="color:#F8F8F2;"> ❌</span></span>
<span class="line"><span style="color:#F8F8F2;">  color: </span><span style="color:#F44747;">#fff;</span><span style="color:#F8F8F2;"> // native 端无效</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">.warpper_context</span><span style="color:#F8F8F2;"> ✔️</span></span>
<span class="line"><span style="color:#F8F8F2;">  color: </span><span style="color:#F44747;">#fff;</span><span style="color:#F8F8F2;"> // native 端有效</span></span></code></pre></div></div><ul><li><p>默认为 <code>flex</code> 布局，务必设置 <code>flex-direction</code> 属性</p></li><li><p>不支持 <code>display: none</code>，即不支持 <code>v-show</code>，需要替换成 <code>v-if</code></p></li><li><p>对于多个 <code>inline-block</code> 元素的布局无法有效实现</p></li><li><p>对于 CSS 不支持 <code>.active.active</code> 增加 CSS 选择器权重的写法</p></li><li><p><a href="https://github.com/alibaba/weex/issues/2183" target="_blank" rel="noreferrer">iOS: modal.toast 无法显示浮层提示</a></p></li></ul><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-objective-c"><button title="Copy Code" class="copy"></button><span class="lang">objective-c</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#F8F8F2;">WXModalUIModule.m</span></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">void</span><span style="color:#F8F8F2;">)toast:(</span><span style="color:#66D9EF;font-style:italic;">NSString</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;">)message duration:(</span><span style="color:#66D9EF;font-style:italic;">double</span><span style="color:#F8F8F2;">)duration</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#A6E22E;">    WXAssertMainThread</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#88846F;">    // UIView *superView =  [[[UIApplication sharedApplication] windows] objectAtIndex:0];</span></span>
<span class="line"><span style="color:#F8F8F2;">    UIView </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">superView </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [[[UIApplication </span><span style="color:#66D9EF;">sharedApplication</span><span style="color:#F8F8F2;">] </span><span style="color:#66D9EF;">windows</span><span style="color:#F8F8F2;">] </span><span style="color:#66D9EF;">lastObject</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">superView) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        superView </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.weexInstance.rootView;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">    UIView </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">toastView </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#FD971F;">self</span><span style="color:#66D9EF;"> toastViewForMessage:</span><span style="color:#F8F8F2;">message </span><span style="color:#66D9EF;">superView:</span><span style="color:#F8F8F2;">superView];</span></span>
<span class="line"><span style="color:#F8F8F2;">    WXToastInfo </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">info </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [WXToastInfo </span><span style="color:#66D9EF;">new</span><span style="color:#F8F8F2;">];</span></span>
<span class="line"><span style="color:#F8F8F2;">    info.toastView </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> toastView;</span></span>
<span class="line"><span style="color:#F8F8F2;">    info.superView </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> superView;</span></span>
<span class="line"><span style="color:#F8F8F2;">    info.duration </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> duration;</span></span>
<span class="line"><span style="color:#F8F8F2;">    [[WXToastManager </span><span style="color:#66D9EF;">sharedManager</span><span style="color:#F8F8F2;">].toastQueue </span><span style="color:#66D9EF;">addObject:</span><span style="color:#F8F8F2;">info];</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">!</span><span style="color:#F8F8F2;">[WXToastManager </span><span style="color:#66D9EF;">sharedManager</span><span style="color:#F8F8F2;">].toastingView) {</span></span>
<span class="line"><span style="color:#F8F8F2;">        [</span><span style="color:#FD971F;">self</span><span style="color:#66D9EF;"> showToast:</span><span style="color:#F8F8F2;">toastView </span><span style="color:#66D9EF;">superView:</span><span style="color:#F8F8F2;">superView </span><span style="color:#66D9EF;">duration:</span><span style="color:#F8F8F2;">duration];</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div></div><ul><li><p><a href="https://github.com/MMF-FE/weex-vue-navigator" target="_blank" rel="noreferrer">weex-vue-navigator</a> 使用 <code>vue-router</code> 的情况下在 native 端实现原生多页应用的体验（用了一下存在内存泄露的问题待解决）</p></li><li><p><a href="https://github.com/SyswinAE/weex-frame/issues/5" target="_blank" rel="noreferrer"><code>iOS</code> 端顶部渲染 20px 的问题</a></p></li><li><p>值得注意的函数执行顺序</p></li></ul><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#A6E22E;">getSkuList</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#FD971F;">  this</span><span style="color:#F8F8F2;">.skuList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [];</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;aaa&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  storage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;skuList&#39;</span><span style="color:#F8F8F2;">, _this.skuList, </span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;set success&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">  storage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;skuList&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">    console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;get value&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (event.data) {</span></span>
<span class="line"><span style="color:#FD971F;">      this</span><span style="color:#F8F8F2;">.skuList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> event.data;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">  });</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;bbb&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre></div></div><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span>运行结果</span></span>
<span class="line"><span>aaa</span></span>
<span class="line"><span>bbb</span></span>
<span class="line"><span>set success</span></span>
<span class="line"><span>get value</span></span></code></pre></div></div><ul><li><code>storage</code> 存储的内容应该转为字符串，取的内容转化为 JSON 对象</li></ul><div class="custom-code-block"><div class="terminal-header"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki monokai vp-code" tabindex="0"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> skuList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [{</span></span>
<span class="line"><span style="color:#F8F8F2;">  skuId: </span><span style="color:#AE81FF;">2696</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  count: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  createTime: </span><span style="color:#AE81FF;">1490688258</span></span>
<span class="line"><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  skuId: </span><span style="color:#AE81FF;">2970</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  count: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  createTime: </span><span style="color:#AE81FF;">1490688272</span></span>
<span class="line"><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  skuId: </span><span style="color:#AE81FF;">2971</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  count: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  createTime: </span><span style="color:#AE81FF;">1490688272</span></span>
<span class="line"><span style="color:#F8F8F2;">}, {</span></span>
<span class="line"><span style="color:#F8F8F2;">  skuId: </span><span style="color:#AE81FF;">2972</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  count: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">  createTime: </span><span style="color:#AE81FF;">1490688272</span></span>
<span class="line"><span style="color:#F8F8F2;">}];</span></span>
<span class="line"><span style="color:#F8F8F2;">skuList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">stringify</span><span style="color:#F8F8F2;">(skuList);</span></span>
<span class="line"><span style="color:#F8F8F2;">storage.</span><span style="color:#A6E22E;">setItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;skuList&#39;</span><span style="color:#F8F8F2;">, skuList, </span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;set success&#39;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F8F8F2;">storage.</span><span style="color:#A6E22E;">getItem</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;skuList&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">event</span><span style="color:#66D9EF;font-style:italic;"> =&gt;</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">  console.</span><span style="color:#A6E22E;">log</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;get value:&#39;</span><span style="color:#F8F8F2;">, event.data);</span></span>
<span class="line"><span style="color:#F92672;">  if</span><span style="color:#F8F8F2;"> (event.data) {</span></span>
<span class="line"><span style="color:#FD971F;">    this</span><span style="color:#F8F8F2;">.skuList </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> JSON.</span><span style="color:#A6E22E;">parse</span><span style="color:#F8F8F2;">(event.data);</span></span>
<span class="line"><span style="color:#F8F8F2;">  }</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span></code></pre></div></div><ul><li><code>router-view</code> 需要包裹在 <code>div</code> 标签中</li></ul>`,12))])}const w=l(c,[["render",F]]);export{E as __pageData,w as default};
